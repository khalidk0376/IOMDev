<!--------------------------------------------------------
Created By - Aishwarya Kumar
This is the ccLiveChat page for customer center
Modified By: [Aishwarya BK-1258]
---------------------------------------------------------->
<apex:page controller="IMCC_LiveChatCtrl" showHeader="false" sidebar="false" standardStylesheets="false" cache="false">
    <html>
    <head>
        <script src="https://use.fontawesome.com/07197e79cd.js"></script>
        <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i" rel="stylesheet"
        />
        <style type="text/css">
            .embeddedServiceHelpButton .helpButton .uiButton {
                background-color: #002244!important;
                font-family: "Arial", sans-serif!important;
            }

            .embeddedServiceHelpButton .helpButton .uiButton {
                border-radius: 8px 8px 0 0!important;
            }

            .embeddedServiceHelpButton .helpButton {
                bottom: 0px!important;
            }

            .embeddedServiceSidebar.layout-docked .dockableContainer {
                height: 100% !important;
            }

            @font-face {
                font-family: 'Salesforce Sans';
                src: url('https://c1.sfdcstatic.com/etc/clientlibs/sfdc-aem-master/clientlibs_base/fonts/SalesforceSans-Regular.woff') format('woff'),
                url('https://c1.sfdcstatic.com/etc/clientlibs/sfdc-aem-master/clientlibs_base/fonts/SalesforceSans-Regular.ttf') format('truetype');
            }
        </style>
        <style>
            .embeddedServiceHelpButton2 {
                display: block;
                position: fixed;
                top: 0;
                left: 0;
                background: transparent;
                box-shadow: none;
                overflow: visible;
                z-index: 999;
                font-family: sans-serif;
            }

            .embeddedServiceHelpButton2 .helpButton2 {
                position: fixed;
                bottom: 0px!important;
                right: 12px;
                height: 46px;
                -webkit-font-smoothing: subpixel-antialiased;
            }

            .embeddedServiceHelpButton2 .helpButtonEnabled2 {
                cursor: pointer;
                position: relative;
            }

            .embeddedServiceHelpButton2 .uiButton2 {
                font-weight: bold;
                font-size: 16px;
                margin: 2px 3px;
                padding: 4px 6px;
                min-width: 12em;
                max-width: 14em;
                text-decoration: none;
                text-align: center;
                border: 0;
                background: #dddfe1;
            }

            .embeddedServiceHelpButton2 .embeddedServiceIcon2 {
                position: relative;
                z-index: 1;
                display: inline-block;
                margin-right: 10px;
                line-height: 1;
                vertical-align: top;
            }
            
            .embeddedServiceHelpButton2 .uiButton2 .helpButtonLabel2 {
                position: relative;
                z-index: 1;
                display: -webkit-box;
                display: -webkit-flex;
                display: -ms-flexbox;
                display: flex;
                -webkit-box-pack: center;
                webkit-justify-content: center;
                -ms-flex-pack: center;
                justify-content: center;
                -webkit-align-items: center;
                -ms-flex-align: center;
                align-items: center;
                -webkit-box-flex: 1;
                -webkit-flex-grow: 1;
                -ms-flex-positive: 1;
                flex-grow: 1;
                -webkit-align-self: stretch;
                -ms-flex-item-align: stretch;
                align-self: stretch;
                max-width: 100%;
                line-height: normal;
                overflow: hidden;
                white-space: nowrap;
                text-overflow: ellipsis;
            }

            .embeddedServiceHelpButton2 .assistiveText2 {
                position: absolute!important;
                height: 1px;
                width: 1px;
                overflow: hidden;
                clip: rect(1px,1px,1px,1px);
            }

            .embeddedServiceHelpButton2 .uiButton2 .helpButtonLabel2 .message2 {
                overflow: hidden;
                white-space: nowrap;
                text-overflow: ellipsis;
            }

            .embeddedServiceHelpButton2 .embeddedServiceIcon2::before {
                font-family: "embeddedserviceiconfont2";
                font-size: 1.25em;
                content: attr(data-icon);
                speak: none;
                text-rendering: auto;
                font-weight: normal;
                font-variant: normal;
                text-transform: none;
                -webkit-font-smoothing: antialiased;
                -moz-osx-font-smoothing: grayscale;
            }

            .embeddedServiceHelpButton2 .helpButton2 .uiButton2 {
                box-sizing: border-box;
                margin: 0;
                padding: 0 12px;
                height: 46px;
                box-shadow: 0 0 12px 0 rgb(0 0 0 / 50%);
                border-radius: 23px;
                line-height: 1;
                background: #000;
                font-size: 0.875em;
                color: #fff;
                font-weight: normal;
                text-shadow: none;
                font-family: inherit;
                display: -webkit-box;
                display: -webkit-flex;
                display: -ms-flexbox;
                display: flex;
                -webkit-align-items: center;
                -ms-flex-align: center;
                align-items: center;
                -webkit-box-pack: justify;
                -webkit-justify-content: space-between;
                -ms-flex-pack: justify;
                justify-content: space-between;
                -webkit-box-orient: horizontal;
                -webkit-box-direction: normal;
                -webkit-flex-direction: row;
                -ms-flex-direction: row;
                flex-direction: row;
            }

            .embeddedServiceHelpButton2 .helpButton2 .uiButton2 {
                background-color: #002244!important;
                font-family: "Arial", sans-serif!important;
            }

            .embeddedServiceHelpButton2 .helpButton2 .uiButton2 {
                border-radius: 8px 8px 0 0!important;
            }
            
            .tableEventSelection{
                max-width: 276px;
                border-spacing: 0px
            }

            .tableEventSelection tr:nth-child(even) td{
                background-color: #f3f3f3;
            }

            .tableEventSelection tr:nth-child(even) td:nth-child(2){
                border-color: #f3f3f3;
            }

            .embeddedServiceSidebar2.modalContainer2 {
                display: block;
                position: fixed;
                z-index: 5000;
                font-family: var(--lwc-fontFamily,"Salesforce Sans"),sans-serif;
                top: 0;
                -webkit-font-smoothing: subpixel-antialiased;
                height: 100%;
            }

            .embeddedServiceSidebar2 {
                font-size: 16px;
                -webkit-font-smoothing: subpixel-antialiased;
                pointer-events: all;
                -webkit-backface-visibility: hidden;
                backface-visibility: hidden;
            }
            
            .embeddedServiceSidebar2.layout-docked2 .dockableContainer2 {
                width: 100%;
                display: flex;
                flex-direction: column;
                max-width: calc(100% - 24px);
                height: calc(100% - 24px);
                margin: 12px auto;
                left: 0;
                right: 0;
                box-shadow: 2px 2px 20px rgb(0 0 0 / 20%);
                border-radius: 8px;
                z-index: 15;
                text-align: center;
                overflow: hidden;
                pointer-events: all;
                position: relative;
            }


            .embeddedServiceSidebar2.layout-docked2 .dockableContainer2 {
                position: fixed;
                left: auto;
                bottom: 0;
                right: 20px;
                margin: 0;
                height: 100%;
                width: var(--lwc-sidebarWidth,320px);
                max-height: var(--lwc-sidebarHeight,498px);
                border-radius: 8px 8px 0 0;
            }


            [embeddedservice-chatheader_chatheader-host2] {
                background-color: rgb(0, 34, 68);
            }


            .embeddedServiceSidebarForm2.formContent2 {
                width: 100%;
                height: calc(100% - 81px);
                overflow-y: auto;
                position: relative;
                background-color: var(--lwc-esColorBackgroundInverse,#fff);
                margin-bottom: 81px;
                border-radius: 0 0 8px 8px;
            }


            .sidebarHeader2 {
                color: rgb(255, 255, 255);
            }

            .embeddedServiceSidebar2 .assistiveText2 {
                position: absolute;
                height: 1px;
                width: 1px;
                overflow: hidden;
                clip: rect(1px, 1px, 1px, 1px);
            }


            embeddedservice-chat-header2 lightning-icon, embeddedservice-chat-header2 svg.slds-icon-text-default {
                fill: rgb(255, 255, 255);
            }


            .embeddedServiceSidebar2 .sidebarBody2 {
                position: relative;
                overflow: hidden;
                flex-grow: 1;
                height: 100%;
                width: 100%;
                z-index: 0;
                background-color: var(--lwc-esColorBackgroundInverse,#fff);
                transform: translate3d(0, 0, 0);
                -webkit-overflow-scrolling: touch;
            }

            
            _:-ms-lang(x)[lightning-primitiveIcon_primitiveIcon], svg[lightning-primitiveIcon_primitiveIcon] {
                pointer-events: none;
            }

            .embeddedServiceSidebarButton2 {
                background:var(--lwc-colorBrandSecondary,#002244);
                font-family:var(--lwc-fontFamily,"Salesforce Sans"),sans-serif;
            }

            .embeddedServiceSidebarButton2:disabled {
                background:var(--lwc-colorBrandSecondary,#002244);
            }

            .embeddedServiceSidebarButton2:focus{
                box-shadow:0 0 3px 0 var(--lwc-colorBrandSecondary,#002244);
            }

            .embeddedServiceSidebarButton2:not(:disabled):focus,.embeddedServiceSidebarButton2:not(:disabled):hover{
                background:var(--lwc-colorBrandSecondaryDarken40,#001429);
            }

            .embeddedServiceSidebarButton2.uiButton--inverse:not(:disabled):focus,.embeddedServiceSidebarButton2.uiButton--inverse:not(:disabled):hover{
                text-decoration-color:var(--lwc-colorBrandSecondaryDarken40,#001429);
            }

            .embeddedServiceSidebarButton2.uiButton--inverse .label{
                color:var(--lwc-colorBrandSecondaryDarken40,#001429);
            }
            
            .embeddedServiceSidebarFormField2 .slds-style-inputtext,.embeddedServiceSidebarFormField2 .slds-style-select{
                color:var(--lwc-colorTextDefault,#333333);
                font-family:var(--lwc-fontFamily,"Salesforce Sans"),sans-serif;
            }

            .embeddedServiceSidebarFormField2 .slds-style-inputtext:focus,.embeddedServiceSidebarFormField2 .slds-style-select:focus{
                border:1px solid var(--lwc-colorBrandSecondaryDarken40,#001429);
                box-shadow:0 0 2px 0 var(--lwc-colorBrandSecondaryDarken40,#001429);
            }

            .embeddedServiceSidebarFormField2 .uiInput .uiLabel-left{
                color:var(--lwc-colorTextDefault,#333333);
            }

            .embeddedServiceSidebarFormField2 .uiInputSelect:after{
                border-top:7px solid var(--lwc-colorBorderBrandSecondary,#002244);
            }
            
            .embeddedServiceSidebarForm2 .backgroundImgColorMask{
                background-color:var(--lwc-colorBrandPrimary,#002244);
            }
            
            .embeddedServiceSidebar2.modalContainer2{
                font-family:var(--lwc-fontFamily,"Salesforce Sans"),sans-serif;
            }

            .embeddedServiceSidebar2 .helpButtonMinimize2{
                background:var(--lwc-colorBrandPrimary,#002244);
                box-shadow:none;
                width:193px;
            }

            .embeddedServiceSidebar2.layout-docked2 .dockableContainer2{
                width:var(--lwc-sidebarWidth,320px);
                max-height:var(--lwc-sidebarHeight,498px);
                border-radius:8px 8px 0 0
            }
            
            [embeddedservice-chatheader_chatheader-host2] {
                direction: inherit;
                height: 50px;
                min-height: 50px;
            }
            
            .sidebarHeader2[embeddedService-chatHeader_chatHeader2] {
                width: 100%;max-width: 100%;
                background-color: inherit;
                transition: background-color 1s ease;
                z-index: 3;
                display: flex;
                align-items: center;
                box-sizing: border-box;
                position: relative;
                padding: 0 14px;
                height: 100%;
            }
            
            img[embeddedService-chatHeader_chatHeader2] {
                margin-right: 8px;
                max-height: 36px;
                max-width: 36px;
            }

            [dir="rtl"]  img[embeddedService-chatHeader_chatHeader2] {
                margin-right: 0;
                margin-left: 8px;
            }

            h2[embeddedService-chatHeader_chatHeader2] {
                margin: 0;
                align-self: center;
                flex-grow: 1;
                text-align: left;
                vertical-align: middle;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                font-size: inherit;
                font-weight: normal;
                letter-spacing: 0.025em;
            }

            button[embeddedService-chatHeader_chatHeader2] {
                background: none;
                border: none;
                height: 32px;
                min-height: 32px;
                width: 32px;
                min-width: 32px;
            }

            button:hover[embeddedService-chatHeader_chatHeader2]:before {
                content: " ";
                position: absolute;
                top: 9px;
                width: 32px;
                height: 32px;
                background-color: #ffffff;
                opacity: .2;
                border-radius: 4px;
                box-sizing: border-box;
                pointer-events: none;
            }

            button.minimizeButton2:hover[embeddedService-chatHeader_chatHeader2]:before {
                right: 46px;
            }

            button.closeButton2:hover[embeddedService-chatHeader_chatHeader2]:before {
                right: 14px;
            }

            button.closeButton2[embeddedService-chatHeader_chatHeader2] {
                padding-top: 4px;
            }

            [dir="rtl"]  button.minimizeButton2:hover[embeddedService-chatHeader_chatHeader2]:before {
                left: 46px;
                right: unset;
            }

            [dir="rtl"]  button.closeButton2:hover[embeddedService-chatHeader_chatHeader2]:before {
                left: 14px;
                right: unset;
            }
            
            :root {
                --lwc-esColorNavBarText: #ffffff;
                --lwc-colorTextDefault: #333333;
                --lwc-esColorBackgroundAlt2Lighten20: #334e69;
                --lwc-esColorNavBarSecondary: #cb2b19;
                --lwc-colorBrandPrimaryLighten20: #334e69;
                --lwc-esColorBackgroundAlt2Darken20: #001b36;
                --lwc-colorBrandPrimaryLighten40: #667a8f;
                --lwc-fontFamily: "Salesforce Sans";
                --lwc-sidebarHeight: 498px;
                --lwc-colorBrandPrimaryLighten60: #99a7b4;
                --lwc-esColorBackgroundAlt2Lighten60: #99a7b4;
                --lwc-esColorBackgroundAlt2Lighten40: #667a8f;
                --lwc-esColorBackgroundAlt2Darken60: #000e1b;
                --lwc-esColorBackgroundAlt2Darken40: #001429;
                --lwc-colorTextDefaultLighten20: #5c5c5c;
                --lwc-colorTextDefaultLighten60: #adadad;
                --lwc-colorTextDefaultLighten40: #858585;
                --lwc-colorBrandSecondaryLighten60: #99a7b4;
                --lwc-colorBrandSecondaryDarken20: #001b36;
                --lwc-colorBrandSecondaryLighten40: #667a8f;
                --lwc-colorBrandSecondaryDarken40: #001429;
                --lwc-colorBrandSecondaryLighten20: #334e69;
                --lwc-colorBrandSecondaryDarken60: #000e1b;
                --lwc-colorBrandPrimaryDarken20: #001b36;
                --lwc-colorBrandPrimary: #002244;
                --lwc-colorBrandPrimaryDarken40: #001429;
                --lwc-colorBrandSecondary: #002244;
                --lwc-sidebarWidth: 320px;
                --lwc-colorTextDefaultDarken60: #141414;
                --lwc-colorBrandSecondaryLuminance4: #001f3d;
                --lwc-colorBrandSecondaryLuminance5: #001c37;
                --lwc-colorBrandSecondaryLuminance6: #001932;
                --lwc-esColorBackgroundAlt2: #002244;
                --lwc-colorBrandPrimaryDarken60: #000e1b;
                --lwc-colorTextDefaultDarken20: #292929;
                --lwc-colorBrandSecondaryLuminance0: #002244;
                --lwc-colorBrandSecondaryLuminance1: #465e77;
                --lwc-colorTextDefaultDarken40: #1f1f1f;
                --lwc-colorBrandSecondaryLuminance2: #314c68;
                --lwc-colorBrandSecondaryLuminance3: #1a3857;
            }

            @font-face{font-family:"embeddedserviceiconfont2";src:url(data:application/octet-stream;base64,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) format("truetype")}

        </style>
        <style>
            .snippet {
                position: relative;
                background: #fff;
                height: 100%;
                box-shadow: 0 .4rem .8rem -.1rem rgba(0, 32, 128, .1), 0 0 0 1px #f0f2f7;
                border-radius: .25rem;
            }
          
            .stage {
                display: flex;
                justify-content: center;
                align-items: center;
                position: relative;
                height: 100%;
                overflow: hidden;
            }

            .dot-pulse {
                position: relative;
                left: -9999px;
                width: 10px;
                height: 10px;
                border-radius: 5px;
                background-color: rgb(0, 34, 68);
                color: rgb(0, 34, 68);
                box-shadow: 9999px 0 0 -5px rgb(0, 34, 68);
                animation: dotPulse 1.5s infinite linear;
                animation-delay: .25s;
            }
          
            .dot-pulse::before, .dot-pulse::after {
                content: '';
                display: inline-block;
                position: absolute;
                top: 0;
                width: 10px;
                height: 10px;
                border-radius: 5px;
                background-color: rgb(0, 34, 68);
                color: rgb(0, 34, 68);
            }
          
            .dot-pulse::before {
                box-shadow: 9984px 0 0 -5px rgb(0, 34, 68);
                animation: dotPulseBefore 1.5s infinite linear;
                animation-delay: 0s;
            }
          
            .dot-pulse::after {
                box-shadow: 10014px 0 0 -5px rgb(0, 34, 68);
                animation: dotPulseAfter 1.5s infinite linear;
                animation-delay: .5s;
            }
          
            @keyframes dotPulseBefore {
                0% {
                    box-shadow: 9984px 0 0 -5px rgb(0, 34, 68);
                }
                30% {
                    box-shadow: 9984px 0 0 2px rgb(0, 34, 68);
                }
                60%,100% {
                    box-shadow: 9984px 0 0 -5px rgb(0, 34, 68);
                }
            }
          
            @keyframes dotPulse {
                0% {
                    box-shadow: 9999px 0 0 -5px rgb(0, 34, 68);
                }
                30% {
                    box-shadow: 9999px 0 0 2px rgb(0, 34, 68);
                }
                60%,100% {
                    box-shadow: 9999px 0 0 -5px rgb(0, 34, 68);
                }
            }
          
            @keyframes dotPulseAfter {
                0% {
                    box-shadow: 10014px 0 0 -5px rgb(0, 34, 68);
                }
                30% {
                    box-shadow: 10014px 0 0 2px rgb(0, 34, 68);
                }
                60%,100% {
                    box-shadow: 10014px 0 0 -5px rgb(0, 34, 68);
                }
            }
        </style>
    </head>

    <body>
        <apex:form >
            <apex:outputPanel rendered="{!IF(isAgentOnline=true, true, false)}" id="mainpanel">
                <apex:outputPanel rendered="{!IF(isEditionSelected=true, true, false)}" id="chatpanel">
                    <script type='text/javascript' src='https://service.force.com/embeddedservice/5.0/esw.min.js'></script>
                    <script type='text/javascript'>
                        var isCallDestroy = {!isCallDestroy};
                        var parenturl = document.referrer;
                        var parentDoamin = parenturl.split("//")[0] + "//" + parenturl.split("//")[1].split("/")[0];
                        var initESW = function (gslbBaseURL) {
                            embedded_svc.addEventHandler("onSettingsCallCompleted", function (data) {
                                if(!isCallDestroy){
                                    //window.parent.postMessage("onSettingsCallCompleted", "{!$Label.CommunityURL}");
                                    window.parent.postMessage("onSettingsCallCompleted", parentDoamin);
                                }
                                if(isCallDestroy){
                                    embedded_svc.onHelpButtonClick();
                                }
                            });

                            embedded_svc.addEventHandler("afterMaximize", function (data) {
                                console.log("afterMaximize");
                                if(isCallDestroy){
                                    if(document.getElementById("editionSelectionDivLoading") != null){
                                        document.getElementById("editionSelectionDivLoading").style.display = "none";
                                    }
                                }
                                //window.parent.postMessage("afterMaximize", "{!$Label.CommunityURL}");
                                window.parent.postMessage("afterMaximize", parentDoamin);
                            });

                            embedded_svc.addEventHandler("afterMinimize", function (data) {
                                //window.parent.postMessage("afterMinimize", "{!$Label.CommunityURL}");
                                window.parent.postMessage("afterMinimize", parentDoamin);
                            });

                            embedded_svc.addEventHandler("afterDestroy", function (data) {
                                //window.parent.postMessage("afterDestroy", "{!$Label.CommunityURL}");
                                window.parent.postMessage("afterDestroy", parentDoamin);
                                if(isCallDestroy){
                                    //window.parent.postMessage("reloadFrame", "{!$Label.CommunityURL}");
                                    window.parent.postMessage("reloadFrame", parentDoamin);
                                }
                            });

                            embedded_svc.settings.displayHelpButton = !isCallDestroy; //Or false
                            embedded_svc.settings.language = ''; //For example, enter 'en' or 'en-US'

                            embedded_svc.settings.defaultMinimizedText = '{!defaultMinimizedText}'; //(Defaults to Chat with an Expert)
                            //embedded_svc.settings.disabledMinimizedText = '...'; //(Defaults to Agent Offline)

                            //embedded_svc.settings.loadingText = ''; //(Defaults to Loading)
                            //embedded_svc.settings.storageDomain = 'yourdomain.com'; //(Sets the domain for your deployment so that visitors can navigate subdomains during a chat session)

                            // Settings for Chat
                            //embedded_svc.settings.directToButtonRouting = function(prechatFormData) {
                            // Dynamically changes the button ID based on what the visitor enters in the pre-chat form.
                            // Returns a valid button ID.
                            //};

                            // Dynamic code starts

                            embedded_svc.settings.prepopulatedPrechatFields = {
                                // Prepopulate the First Name, Last Name and Email for the logged in user        
                                FirstName: '{!contactFirstName}',
                                LastName: '{!contactLastName}',
                                Email: '{!contactEmail}',
                            };

                            embedded_svc.settings.extraPrechatFormDetails = [
                                {
                                    "label": "EventEdition",
                                    // Prepopulate Event Edition ID provided here in Value         
                                    "value": "{!editionId}",
                                    "transcriptFields": ["Edition__c"],
                                    "displayToAgent": true
                                },
                                // Prepopulate 
                                {
                                    "label": "CS Team",
                                    "value": "{!supportTeam}",
                                    "transcriptFields": ["Customer_Support_Team__c"],
                                    "displayToAgent": true
                                }
                            ];

                            embedded_svc.settings.extraPrechatInfo = [
                                {
                                    "entityName": "Case",
                                    "showOnCreate": true,
                                    "saveToTranscript": "Case",
                                    "entityFieldMaps": [
                                        {
                                            "isExactMatch": false,
                                            "fieldName": "Edition__c",
                                            "doCreate": true,
                                            "doFind": false,
                                            "label": "EventEdition"
                                        },
                                        {
                                            "isExactMatch": false,
                                            "fieldName": "SuppliedEmail",
                                            "doCreate": true,
                                            "doFind": false,
                                            "label": "Email"
                                        }
                                    ]
                                }
                            ];

                            // Dynamic code ends 
                            //embedded_svc.settings.prepopulatedPrechatFields = {}; //Sets the auto-population of pre-chat form fields
                            //embedded_svc.settings.fallbackRouting = []; //An array of button IDs, user IDs, or userId_buttonId
                            //embedded_svc.settings.offlineSupportMinimizedText = ''; //(Defaults to Contact Us)

                            embedded_svc.settings.enabledFeatures = ['LiveAgent'];
                            embedded_svc.settings.entryFeature = 'LiveAgent';

                            embedded_svc.init(
                                '{!$Label.Org_Base_Url}',
                                '{!$Label.CommunityURL}/CustomerCenter',
                                gslbBaseURL,
                                '{!LEFT($Organization.Id,15)}',
                                '{!chatDeployment}',
                                {
                                    baseLiveAgentContentURL: '{!baseLiveAgentContentURL}',
                                    deploymentId: '{!deploymentId}',
                                    buttonId: '{!buttonID}',
                                    baseLiveAgentURL: '{!baseLiveAgentURL}',
                                    eswLiveAgentDevName: '{!agentDevName}',
                                    isOfflineSupportEnabled: true
                                }
                            );
                        };



                        if (!window.embedded_svc) {
                            var s = document.createElement('script');
                            s.setAttribute('src', '{!$Label.Org_Base_Url}/embeddedservice/5.0/esw.min.js');
                            s.onload = function () {
                                initESW(null);
                            };
                            document.body.appendChild(s);
                        } else {
                            initESW('https://service.force.com');
                        }
                        // --------------------Contact Us Form EDITION----------------------

                        !function () {
                            let a = XMLHttpRequest.prototype.open;
                            XMLHttpRequest.prototype.open = function () {
                                this.addEventListener('load', b => {
                                    let ecode = document.querySelector('input#Edition_Code__c');
                                    let Name = document.querySelector('input#SuppliedName');
                                    let email = document.querySelector('input#SuppliedEmail');
                                    let phone = document.querySelector('input#SuppliedPhone');
                                    let subject = document.querySelector('input#Subject');
                                    let supportHoursDiv = document.querySelector('div#Support_Hours__div');

                                    if (supportHoursDiv == null) {
                                        if(document.querySelector('.offlineSupportUI') != null){
                                            if(document.querySelector('.offlineSupportUI').querySelector('.formContent') != null){
                                                let fieldsMainDiv = document.querySelector('.offlineSupportUI').querySelector('.formContent').querySelector('.fieldList');
                                                if(fieldsMainDiv != null){
                                                    let newDiv = document.createElement("div");
                                                    newDiv.setAttribute("id", "Support_Hours__div");
                                                    newDiv.setAttribute("class", "inputText embeddedServiceSidebarFormField");
                                                    let strHtml = '<div class="uiInput uiInputText uiInput--default uiInput--input">';
                                                    strHtml += '<label for="Support_Hours__c" class="uiLabel-left form-element__label uiLabel">';
                                                    strHtml += '<span>Live Chat Support Hours</span>';
                                                    strHtml += '</label>';
                                                    strHtml += '<div style="font-weight:1000;font-style:italic;">{!supportHours}</div>';
                                                    strHtml += '</div>';
                                                    newDiv.innerHTML = strHtml;
                                                    fieldsMainDiv.insertBefore(newDiv, fieldsMainDiv.firstChild);
                                                }
                                            }
                                        }
                                    }
                                    if (ecode != null) {

                                        document.querySelector('label[for="Edition_Code__c"]').style.display = 'none';
                                        ecode.style.display = 'none';
                                        ecode.value = '{!editionId}';
                                        ecode.dispatchEvent(new Event('change', { 'bubbles': !0 }));

                                        Name.value = '{!contactFirstName} ' + '{!contactLastName}';
                                        Name.dispatchEvent(new Event('change', { 'bubbles': !0 }));

                                        email.value = '{!contactEmail}';
                                        email.dispatchEvent(new Event('change', { 'bubbles': !0 }));
                                    }
                                });
                                a.apply(this, arguments);
                            };
                        }();
                    </script>
                </apex:outputPanel>

                <apex:outputPanel rendered="{!IF(isEditionSelected=true, false, true)}" id="eventpanel">
                    <div id="eventpanelContainer">
                        <div class="embeddedServiceHelpButton2" id="editionSelectionOpenButton">
                            <div class="helpButton2">
                                <button class="helpButtonEnabled2 uiButton2" href="javascript:void(0)" onclick="javascript:return Maximize()">
                                    <span class="embeddedServiceIcon2" aria-hidden="true" data-icon="" style="display: inline-block;"></span>
                                    <span class="helpButtonLabel2" id="helpButtonSpan" aria-live="polite" aria-atomic="true">
                                        <span class="assistiveText2">Live chat:</span>
                                        <span class="message message2">Need Help?</span>
                                    </span>
                                </button>
                            </div>
                        </div>

                        <script type='text/javascript'>
                            var parenturl = document.referrer;
                            var parentDoamin = parenturl.split("//")[0] + "//" + parenturl.split("//")[1].split("/")[0];
                            var SettingsCallCompleted = function () {
                                //window.parent.postMessage("onSettingsCallCompleted", "{!$Label.CommunityURL}");
                                window.parent.postMessage("onSettingsCallCompleted", parentDoamin);
                                showHideDiv("editionSelectionOpenButton","block");
                                showHideDiv("editionSelectionDiv","none");
                                return false;
                            }

                            var Maximize = function () {
                                //window.parent.postMessage("afterMaximize", "{!$Label.CommunityURL}");
                                window.parent.postMessage("afterMaximize", parentDoamin);
                                showHideDiv("editionSelectionOpenButton","none");
                                showHideDiv("editionSelectionDiv","block");
                                return false;
                            }

                            var Minimize = function () {
                                //window.parent.postMessage("afterMinimize", "{!$Label.CommunityURL}");
                                window.parent.postMessage("afterMinimize", parentDoamin);
                                showHideDiv("editionSelectionOpenButton","block");
                                showHideDiv("editionSelectionDiv","none");
                                return false;
                            }

                            var showHideDiv = function(divid, displayType){
                                if(document.getElementById(divid) != null){
                                    document.getElementById(divid).style.display = displayType;
                                }
                            }

                            SettingsCallCompleted();
                        </script>
                    </div>
                </apex:outputPanel>
            </apex:outputPanel>

            <apex:actionFunction name="openchat" action="{!eventSelected}" rerender="mainpanel">
                <apex:param name="selectedEditionId" assignTo="{!editionId}" value="" />
            </apex:actionFunction>
            
            <script>
                var initiateChat = function(editionId){
                    if(document.getElementById("editionSelectionDivLoading") != null){
                        document.getElementById("editionSelectionDivLoading").style.display = "block";
                    }
                    if(document.getElementById("editionSelectionDiv") != null){
                        document.getElementById("editionSelectionDiv").style.display = "none";
                    }
                    openchat(editionId);
                }
            </script>
            <div id="editionSelectionDiv" class="modalContainer2 sidebarMaximized2 layout-docked2 embeddedServiceSidebar2" style="display:none;">
                <div role="dialog" class="dockableContainer2 showDockableContainer2" style="font-size:16px;">
                    <embeddedservice-chat-header2 embeddedservice-chatheader_chatheader-host2="1">
                        <header embeddedService-chatHeader_chatHeader2="1" class="sidebarHeader2">
                            <h2 embeddedService-chatHeader_chatHeader2="1">Choose Event</h2>
                            <button onclick="javascript:return Minimize()" embeddedService-chatHeader_chatHeader2="1" class="minimizeButton2" title="Minimize chat">
                                <span embeddedService-chatHeader_chatHeader2="1" class="assistiveText2">Minimize chat</span>
                                <lightning-icon embeddedService-chatHeader_chatHeader2="1" class="slds-icon-utility-minimize-window slds-icon_container">
                                    <lightning-primitive-icon>
                                        <svg class="slds-icon slds-icon-text-default slds-icon_x-small" focusable="false" viewBox="0 0 52 52">
                                            <g>
                                                <path d="M50 48.5c0 .8-.7 1.5-1.5 1.5h-45c-.8 0-1.5-.7-1.5-1.5v-3c0-.8.7-1.5 1.5-1.5h45c.8 0 1.5.7 1.5 1.5v3z"></path>
                                            </g>
                                        </svg>
                                    </lightning-primitive-icon>
                                </lightning-icon>
                            </button>
                            <button onclick="javascript:return Minimize()" embeddedService-chatHeader_chatHeader2="1" class="closeButton2" title="Close dialog">
                                <span embeddedService-chatHeader_chatHeader2="1" class="assistiveText2">Close dialog</span>
                                <lightning-icon embeddedService-chatHeader_chatHeader2="1" class="slds-icon-utility-close slds-icon_container">
                                    <lightning-primitive-icon>
                                        <svg class="slds-icon slds-icon-text-default slds-icon_x-small" focusable="false" viewBox="0 0 52 52">
                                            <g>
                                                <path d="M31 25.4l13-13.1c.6-.6.6-1.5 0-2.1l-2-2.1c-.6-.6-1.5-.6-2.1 0L26.8 21.2c-.4.4-1 .4-1.4 0L12.3 8c-.6-.6-1.5-.6-2.1 0l-2.1 2.1c-.6.6-.6 1.5 0 2.1l13.1 13.1c.4.4.4 1 0 1.4L8 39.9c-.6.6-.6 1.5 0 2.1l2.1 2.1c.6.6 1.5.6 2.1 0L25.3 31c.4-.4 1-.4 1.4 0l13.1 13.1c.6.6 1.5.6 2.1 0L44 42c.6-.6.6-1.5 0-2.1L31 26.8c-.4-.4-.4-1 0-1.4z"></path>
                                            </g>
                                        </svg>
                                    </lightning-primitive-icon>
                                </lightning-icon>
                            </button>
                        </header>
                    </embeddedservice-chat-header2>
                    
                    <div class="sidebarBody2">
                        <div class="activeFeature2 hideWhileLoading" style="height:100%;">
                            <div class="featureBody2 embeddedServiceSidebarFeature2 embeddedServiceLiveAgentSidebarFeature2" style="height:100%;">
                                <div class="stateBody2 embeddedServiceSidebarState2" style="height:100%;">
                                    <div class="offlineSupportUI2 embeddedServiceLiveAgentStateOfflineSupportDefaultUI2" style="height:100%;">
                                        <div class="formContent2 embeddedServiceSidebarForm2" style="height:100%;">
                                            <div class="fieldList2" style="height:100%;">
                                                <div id="Support_Hours__div2" class="inputText2 embeddedServiceSidebarFormField2" style="height:100%;">
                                                    <div class="uiInput uiInputText uiInput--default uiInput--input" style="height:calc(100% - 10px);padding-top:10px;">
                                                        <label for="Support_Hours__c2" class="uiLabel-left form-element__label uiLabel">
                                                            <span style="font-weight:bold;">Please choose the event you are participating in?</span>
                                                        </label>
                                                        <div style="font-weight:normal;font-size:14px;text-align:left;padding-top:10px;">
                                                            <table class="tableEventSelection">
                                                                <apex:repeat value="{!getEditionList}" var="event" id="theRepeat">
                                                                    <tr>
                                                                        <td style="max-width:30px;padding-bottom:5px;">
                                                                            <input onchange="javascript:initiateChat('{!event.Id}')" id="{!event.Id}" type="radio" name="eventEditions" value='{!event.Name}'/>
                                                                        </td>
                                                                        <td style="min-width:246px;max-width:246px;padding-bottom:5px;padding-left:5px;">
                                                                            <label for="{!event.Id}"  style="word-wrap:break-word;">{!event.Name}</label>
                                                                        </td>
                                                                    </tr>
                                                                </apex:repeat>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!--<div class="buttonWrapper2 embeddedServiceSidebarForm2">
                                            <button type="button" class="submitButton uiButton--default uiButton2 embeddedServiceSidebarButton2">
                                                <span dir="ltr" class=" label bBody">Submit</span>
                                            </button>
                                        </div>-->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="editionSelectionDivLoading" class="modalContainer2 sidebarMaximized2 layout-docked2 embeddedServiceSidebar2" style="display:none;">
                <div role="dialog" class="dockableContainer2 showDockableContainer2" style="font-size:16px;">
                    <embeddedservice-chat-header2 embeddedservice-chatheader_chatheader-host2="1">
                        <header embeddedService-chatHeader_chatHeader2="1" class="sidebarHeader2">
                            <h2 embeddedService-chatHeader_chatHeader2="1">Loading</h2>
                        </header>
                    </embeddedservice-chat-header2>
                    
                    <div class="sidebarBody2">
                        <div class="activeFeature2 hideWhileLoading" style="height:100%;">
                            <div class="featureBody2 embeddedServiceSidebarFeature2 embeddedServiceLiveAgentSidebarFeature2" style="height:100%;">
                                <div class="stateBody2 embeddedServiceSidebarState2" style="height:100%;">
                                    <div class="offlineSupportUI2 embeddedServiceLiveAgentStateOfflineSupportDefaultUI2" style="height:100%;">
                                        <div class="formContent2 embeddedServiceSidebarForm2" style="height:100%;">
                                            <div class="fieldList2" style="height:100%;">
                                                <div id="Support_Hours__div3" class="inputText2 embeddedServiceSidebarFormField2 slds-scope" style="height:100%;position:relative;">
                                                    <div class="snippet">
                                                        <div class="stage">
                                                          <div class="dot-pulse"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </apex:form>
    </body>

    </html>
</apex:page>